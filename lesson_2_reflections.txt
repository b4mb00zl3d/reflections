What happens when you initialize a respository? Why do you need to do it? 
It initializes an empty Git repository. You need to do it so you can start doing version control. 

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is an interim stage that holds the files ahead of them being commited to the repository. It's valuable because it allows you to set the files aside before commiting to the repository. 

How can you use the staging area to make sure you have one commit per logical change?
I can use the staging area to track logical changes on before I commit. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches would be helpful in keeping the history organized if there were several different versions of the existing program. This allows for experimentation before committing entirely. 

How do the diagrams help you visualize the branch structure?
I think this is pretty obvious. The diagrams give an intuitive visual to understand how the branches are connected to each other and to help the developer understand the consequences of making any further changes and/or commits. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do? 
It merges all of the commits togetether into one branch. All the commits are organized by time stamp. We reprsent it in the diagram to visualize that at some point the branch forked and then merged back together. This gives a intuitive visual cue about the version history. 

What are the pros and cons of Git's automatic merging vs. always doing merges manually? 
Git will automatically merge unless there's an indication that two parts of the of the same file were changed. Because it's unclear on the "ground truth" it prompts the user to decide which code is correct. This is good because it adds a mechanism for the user to verify the code instead of doing it automatically. Obviously, it would be more convenient if Git could do it on its own. Though it my one day in the future, it cannot do it now. 
When would you want to create a remote repository rather than keeping all your work local? 
I would create a remote repository instead of keeping all of my work local if I am colllaborating with other people on a joint project. 

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository? 
I would want to manually pull changes because I am experimenting with a feature and might not want to make it publically avaialble (or even privately available to the greater team). This gives me greater control around versioning. 

Describe the differences between forks, clones, and branches. When would you use one instead of another? 
Fork is a GitHub construct. When you fork, you all branches on GitHub will be copied to your GitHub. Nothing is copied to your local machine. As its name implies, a clone will contain all hte branches in the main repository that you are forking/copying from. A branch within the fork and/or in the main repo can correspond to several kinds of thigns: experiments, new features, etc. 

What is the benefit of having a copy of the last known state of the remote stored locally? 
The beenfit of having a copy of the last known state of the remote stored locally is to be able o rectify any discrepancies between the remote code and that that is stored locally on your machine. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would collaborate using a cloud storage provider. It would be easier in the sense that I would not need to know all of the controls and subtlties of Git. However, I would not get the control and granularity that comes with Git/GitHub. 
